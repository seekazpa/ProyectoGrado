@model NutriVaSe.Models.ExpandedUserDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Usuarios del Sistema";
    ViewBag.SubTitle = "Crear Nuevo";
}


<!-- page content -->
<div>
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h2>
                        @ViewBag.Title <small>@ViewBag.SubTitle</small>
                        <a href="@Url.Action("Index", "Admin")" class="btn btn-danger pull-right">
                            <i class="fa fa-reply"></i>
                            Volver a la lista
                        </a>
                    </h2>
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-12", @placeholder = "Email", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3 " })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Contraseña", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control col-md-12", @placeholder = "Nombre" } })

                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control col-md-12", @placeholder = "Apellido" } })

                                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3 " })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telefono" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.DropDownList("Roles", null, new { @id = "Roles", @class = "form-control", @placeholder = "Roles", @required = "true" })
                                @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger", @required = "true" })
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                                <button type="reset" class="btn btn-default">Limpiar</button>
                                <button type="submit" class="btn btn-success"><i class="fa fa-check"></i> Guardar</button>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

